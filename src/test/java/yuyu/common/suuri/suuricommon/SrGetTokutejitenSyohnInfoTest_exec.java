package yuyu.common.suuri.suuricommon;

import static yuyu.testinfr.YuyuFunctionTestUtil.*;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import jp.co.dgic.testing.common.virtualmock.MockObjectManager;
import jp.co.slcs.swak.date.BizDate;
import jp.co.slcs.swak.number.BizCurrency;
import jp.co.slcs.swak.number.BizNumber;

import org.junit.AfterClass;
import org.junit.Test;
import org.junit.runner.RunWith;

import yuyu.common.hozen.khcommon.IKhozenCommonConstants;
import yuyu.def.classification.C_6daiLdKbn;
import yuyu.def.classification.C_Hhknsei;
import yuyu.def.classification.C_HknkknsmnKbn;
import yuyu.def.classification.C_HrkkknsmnKbn;
import yuyu.def.classification.C_KataKbn;
import yuyu.def.classification.C_KhnkyhkgbairituKbn;
import yuyu.def.classification.C_KyhgndkataKbn;
import yuyu.def.classification.C_Kykjyoutai;
import yuyu.def.classification.C_Nenkinsyu;
import yuyu.def.classification.C_PmnjtkKbn;
import yuyu.def.classification.C_Sisuukbn;
import yuyu.def.classification.C_SyoriKbn;
import yuyu.def.classification.C_SyouhinJyouhouGetKbn;
import yuyu.def.classification.C_Syoumetujiyuu;
import yuyu.def.classification.C_SyukyhkinkataKbn;
import yuyu.def.classification.C_SyutkKbn;
import yuyu.def.classification.C_TmttknhaibunjyoutaiKbn;
import yuyu.def.classification.C_TokutejitenSyoriKbn;
import yuyu.def.classification.C_Tuukasyu;
import yuyu.def.classification.C_UmuKbn;
import yuyu.def.classification.C_YuukousyoumetuKbn;
import yuyu.def.db.entity.SV_KiykSyuhnData;
import yuyu.testinfr.OrderedRunner;
import yuyu.testinfr.TestOrder;

/**
 * SrGetTokutejitenSyohnInfoクラスのメソッド {@link SrGetTokutejitenSyohnInfo#exec(C_TokutejitenSyoriKbn,String,BizDate,String,List<SV_KiykSyuhnData>)}テスト用クラスです<br />
 */
@RunWith(OrderedRunner.class)
public class SrGetTokutejitenSyohnInfoTest_exec {

    @Inject
    private SrGetTokutejitenSyohnInfo srGetTokutejitenSyohnInfo;

    @AfterClass
    public static void testClear() {
        MockObjectManager.initialize();
    }

    @Test
    @TestOrder(10)
    public void testExec_A1() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000019";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData0 = new SV_KiykSyuhnData();
        kiykSyuhnData0.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_KEIYAKUINFOTORIKOMI);
        kiykSyuhnData0.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData0.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnDataLst.add(kiykSyuhnData0);

        SV_KiykSyuhnData kiykSyuhnData1 = new SV_KiykSyuhnData();
        kiykSyuhnData1.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_SEINENGAPPISEI);
        kiykSyuhnData1.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData1.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnDataLst.add(kiykSyuhnData1);

        SV_KiykSyuhnData kiykSyuhnData2 = new SV_KiykSyuhnData();
        kiykSyuhnData2.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData2.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData2.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnDataLst.add(kiykSyuhnData2);

        SV_KiykSyuhnData kiykSyuhnData3 = new SV_KiykSyuhnData();
        kiykSyuhnData3.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData3.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData3.setSyoumetujiyuu(C_Syoumetujiyuu.KYKTORIKESI);
        kiykSyuhnDataLst.add(kiykSyuhnData3);

        SV_KiykSyuhnData kiykSyuhnData4 = new SV_KiykSyuhnData();
        kiykSyuhnData4.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData4.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData4.setSyoumetujiyuu(C_Syoumetujiyuu.CLGOFF);
        kiykSyuhnDataLst.add(kiykSyuhnData4);

        SV_KiykSyuhnData kiykSyuhnData5 = new SV_KiykSyuhnData();
        kiykSyuhnData5.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData5.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData5.setSyoumetujiyuu(C_Syoumetujiyuu.SIBOU);
        kiykSyuhnDataLst.add(kiykSyuhnData5);

        SV_KiykSyuhnData kiykSyuhnData6 = new SV_KiykSyuhnData();
        kiykSyuhnData6.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData6.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData6.setSyoumetujiyuu(C_Syoumetujiyuu.SIBOUSAIGAIMENSEKI);
        kiykSyuhnDataLst.add(kiykSyuhnData6);

        SV_KiykSyuhnData kiykSyuhnData7 = new SV_KiykSyuhnData();
        kiykSyuhnData7.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData7.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData7.setSyoumetujiyuu(C_Syoumetujiyuu.SBKAIJO);
        kiykSyuhnDataLst.add(kiykSyuhnData7);

        SV_KiykSyuhnData kiykSyuhnData8 = new SV_KiykSyuhnData();
        kiykSyuhnData8.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData8.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData8.setSyoumetujiyuu(C_Syoumetujiyuu.KAIJO);
        kiykSyuhnDataLst.add(kiykSyuhnData8);

        SV_KiykSyuhnData kiykSyuhnData9 = new SV_KiykSyuhnData();
        kiykSyuhnData9.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData9.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData9.setSyoumetujiyuu(C_Syoumetujiyuu.MENSEKI);
        kiykSyuhnDataLst.add(kiykSyuhnData9);

        SV_KiykSyuhnData kiykSyuhnData10 = new SV_KiykSyuhnData();
        kiykSyuhnData10.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData10.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData10.setSyoumetujiyuu(C_Syoumetujiyuu.SBMUKOU);
        kiykSyuhnDataLst.add(kiykSyuhnData10);

        SV_KiykSyuhnData kiykSyuhnData11 = new SV_KiykSyuhnData();
        kiykSyuhnData11.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData11.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData11.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnData11.setSyoriYmd(BizDate.valueOf("20110101"));
        kiykSyuhnDataLst.add(kiykSyuhnData11);

        SV_KiykSyuhnData kiykSyuhnData12 = new SV_KiykSyuhnData();
        kiykSyuhnData12.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData12.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData12.setSyoumetujiyuu(C_Syoumetujiyuu.SIBOUSAIGAIHIGAITOU);
        kiykSyuhnDataLst.add(kiykSyuhnData12);

        SV_KiykSyuhnData kiykSyuhnData13 = new SV_KiykSyuhnData();
        kiykSyuhnData13.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData13.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData13.setSyoumetujiyuu(C_Syoumetujiyuu.SIBOUKYUUHUKINSHR);
        kiykSyuhnData13.setSyorikbn(C_SyoriKbn.ITEN);
        kiykSyuhnDataLst.add(kiykSyuhnData13);

        SV_KiykSyuhnData kiykSyuhnData14 = new SV_KiykSyuhnData();
        kiykSyuhnData14.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_KHMKHGKTTTYENDTHNK);
        kiykSyuhnData14.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData14.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData14.setSyorikbn(C_SyoriKbn.ITENTORIKESI);
        kiykSyuhnDataLst.add(kiykSyuhnData14);

        SV_KiykSyuhnData kiykSyuhnData15 = new SV_KiykSyuhnData();
        kiykSyuhnData15.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_KANIKEIYAKUNAIYOUTEISEI);
        kiykSyuhnData15.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU );
        kiykSyuhnData15.setSyorikbn(C_SyoriKbn.YENDTHNKHRSHR_KEIYAKUSYASIBOU);
        kiykSyuhnData15.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnDataLst.add(kiykSyuhnData15);

        SV_KiykSyuhnData kiykSyuhnData16 = new SV_KiykSyuhnData();
        kiykSyuhnData16.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_KANIKEIYAKUNAIYOUTEISEI);
        kiykSyuhnData16.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU );
        kiykSyuhnData16.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData16.setSyorikbn(C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI);
        kiykSyuhnDataLst.add(kiykSyuhnData16);



        SV_KiykSyuhnData kiykSyuhnData17 = new SV_KiykSyuhnData();
        kiykSyuhnData17.setSyono("10810000019");
        kiykSyuhnData17.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData17.setSyouhncd("1005");
        kiykSyuhnData17.setSyouhnsdno(0);
        kiykSyuhnData17.setKyksyouhnrenno(0);
        kiykSyuhnData17.setHenkousikibetukey("100000000000000005");
        kiykSyuhnData17.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData17.setKykjyoutai(C_Kykjyoutai.HRKMTYUU);
        kiykSyuhnData17.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnData17.setSyoumetuymd(BizDate.valueOf("20040404"));
        kiykSyuhnData17.setKouryokuhasseiymd(BizDate.valueOf("20090101"));
        kiykSyuhnData17.setKykymd(BizDate.valueOf("20040404"));
        kiykSyuhnData17.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData17.setSknnkaisiymd(BizDate.valueOf("20040404"));
        kiykSyuhnData17.setGansknnkaisiymd(BizDate.valueOf("20040405"));
        kiykSyuhnData17.setHksknnkaisiymd(BizDate.valueOf("20040406"));
        kiykSyuhnData17.setHkgansknnkaisiymd(BizDate.valueOf("20040407"));
        kiykSyuhnData17.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData17.setHknkkn(04);
        kiykSyuhnData17.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData17.setHrkkkn(04);
        kiykSyuhnData17.setKyknen(044);
        kiykSyuhnData17.setHhknnen(044);
        kiykSyuhnData17.setHhknseiymd(BizDate.valueOf("20040404"));
        kiykSyuhnData17.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData17.setHaraimanymd(BizDate.valueOf("20040404"));
        kiykSyuhnData17.setHknkknmanryouymd(BizDate.valueOf("20040404"));
        kiykSyuhnData17.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData17.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData17.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData17.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData17.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData17.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData17.setKihons(BizCurrency.valueOf(1000000000004L));
        kiykSyuhnData17.setHokenryou(BizCurrency.valueOf(1000000000004L));
        kiykSyuhnData17.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData17.setRyouritusdno("004");
        kiykSyuhnData17.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData17.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData17.setYtirrthndmnskaisuu(44);
        kiykSyuhnData17.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData17.setNenkinkkn(44);
        kiykSyuhnData17.setNkgnshosyouritu(444);
        kiykSyuhnData17.setNkgnshosyougk(BizCurrency.valueOf(1000000000004L));
        kiykSyuhnData17.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData17.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000002L));
        kiykSyuhnData17.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData17.setSetteibairitu(BizNumber.valueOf(0.12));
        kiykSyuhnData17.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData17.setTmttknzoukaritujygn(BizNumber.valueOf(0.1234));
        kiykSyuhnData17.setTumitateriritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData17.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.SISUU_ONLY);
        kiykSyuhnData17.setSisuukbn(C_Sisuukbn.BLCON2);
        kiykSyuhnData17.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData17.setGsbunritaisyou(C_UmuKbn.ARI);
        kiykSyuhnData17.setPharaikomisougaku(BizCurrency.valueOf(2000000000000L));
        kiykSyuhnData17.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData17.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData17.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData17.setDai1hknkkn(10);
        kiykSyuhnData17.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData17.setSyorikbn(C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI);
        kiykSyuhnData17.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnDataLst.add(kiykSyuhnData17);

        SV_KiykSyuhnData kiykSyuhnData18 = new SV_KiykSyuhnData();
        kiykSyuhnData18.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData18.setYuukousyoumetukbn(C_YuukousyoumetuKbn.BLNK);
        kiykSyuhnData18.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnData18.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnDataLst.add(kiykSyuhnData18);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000019", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1005", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000005", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.YUUKOU, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HRKMTYUU, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.MUKOU, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040404"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20090101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040404"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040404"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040405"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040406"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040407"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 04, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 04, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 044, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 044, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040404"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040404"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040404"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000004L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000004L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "004", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000004L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_GENGAKU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000002L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.12), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.1234), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.5678), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.SISUU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON2, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.ARI , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000000L), "保険料払込総額");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI , "処理区分");


        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(20)
    public void testExec_A2() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.KAIYAKU);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000002L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.44));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000001L));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.SYOUMETU, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.KAIYAKU, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20090101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_GENGAKU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000002L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.44), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.4444), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.4444), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000001L), "保険料払込総額");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(30)
    public void testExec_A3() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000096";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（後）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto() == null, true, "特定時点契約商品（後）レコードBean");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(40)
    public void testExec_A4() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.TOKUTEIIDOUSYOUHININFO;
        String tokutejitenSyono = "10810000086";
        BizDate tokutejitenKijyunYmd = null;
        String tokutejitenKey = "100000000000000008";
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData0 = new SV_KiykSyuhnData();
        kiykSyuhnData0.setSyono("10810000086");
        kiykSyuhnData0.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData0.setSyouhncd("1008");
        kiykSyuhnData0.setSyouhnsdno(0);
        kiykSyuhnData0.setKyksyouhnrenno(0);
        kiykSyuhnData0.setHenkousikibetukey("100000000000000007");
        kiykSyuhnData0.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData0.setKykjyoutai(C_Kykjyoutai.HRKMTYUU);
        kiykSyuhnData0.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnData0.setSyoumetuymd(BizDate.valueOf("20080808"));
        kiykSyuhnData0.setKouryokuhasseiymd(BizDate.valueOf("20090101"));
        kiykSyuhnData0.setKykymd(BizDate.valueOf("20080808"));
        kiykSyuhnData0.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData0.setSknnkaisiymd(BizDate.valueOf("20080808"));
        kiykSyuhnData0.setGansknnkaisiymd(BizDate.valueOf("20080809"));
        kiykSyuhnData0.setHksknnkaisiymd(BizDate.valueOf("20080810"));
        kiykSyuhnData0.setHkgansknnkaisiymd(BizDate.valueOf("20080811"));
        kiykSyuhnData0.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData0.setHknkkn(8);
        kiykSyuhnData0.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData0.setHrkkkn(8);
        kiykSyuhnData0.setKyknen(88);
        kiykSyuhnData0.setHhknnen(88);
        kiykSyuhnData0.setHhknseiymd(BizDate.valueOf("20080808"));
        kiykSyuhnData0.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData0.setHaraimanymd(BizDate.valueOf("20080808"));
        kiykSyuhnData0.setHknkknmanryouymd(BizDate.valueOf("20080808"));
        kiykSyuhnData0.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData0.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData0.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData0.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData0.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData0.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData0.setKihons(BizCurrency.valueOf(1000000000008L));
        kiykSyuhnData0.setHokenryou(BizCurrency.valueOf(1000000000008L));
        kiykSyuhnData0.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData0.setRyouritusdno("008");
        kiykSyuhnData0.setYoteiriritu(BizNumber.valueOf(0.8888));
        kiykSyuhnData0.setYoteirrthendohosyurrt(BizNumber.valueOf(0.8888));
        kiykSyuhnData0.setYtirrthndmnskaisuu(88);
        kiykSyuhnData0.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData0.setNenkinkkn(88);
        kiykSyuhnData0.setNkgnshosyouritu(888);
        kiykSyuhnData0.setNkgnshosyougk(BizCurrency.valueOf(1000000000008L));
        kiykSyuhnData0.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData0.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData0.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData0.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData0.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData0.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData0.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData0.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData0.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData0.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData0.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData0.setPharaikomisougaku(BizCurrency.valueOf(2000000000002L));
        kiykSyuhnData0.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData0.setSyorikbn(C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI);
        kiykSyuhnData0.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData0.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData0.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData0.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData0.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData0);

        SV_KiykSyuhnData kiykSyuhnData1 = new SV_KiykSyuhnData();
        kiykSyuhnData1.setSyono("10810000086");
        kiykSyuhnData1.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData1.setSyouhncd("1008");
        kiykSyuhnData1.setSyouhnsdno(0);
        kiykSyuhnData1.setKyksyouhnrenno(0);
        kiykSyuhnData1.setHenkousikibetukey("100000000000000008");
        kiykSyuhnData1.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData1.setKykjyoutai(C_Kykjyoutai.HRKMTYUU);
        kiykSyuhnData1.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnData1.setSyoumetuymd(BizDate.valueOf("20080808"));
        kiykSyuhnData1.setKouryokuhasseiymd(BizDate.valueOf("20090101"));
        kiykSyuhnData1.setKykymd(BizDate.valueOf("20080808"));
        kiykSyuhnData1.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData1.setSknnkaisiymd(BizDate.valueOf("20080808"));
        kiykSyuhnData1.setGansknnkaisiymd(BizDate.valueOf("20080819"));
        kiykSyuhnData1.setHksknnkaisiymd(BizDate.valueOf("20080820"));
        kiykSyuhnData1.setHkgansknnkaisiymd(BizDate.valueOf("20080821"));
        kiykSyuhnData1.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData1.setHknkkn(8);
        kiykSyuhnData1.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData1.setHrkkkn(8);
        kiykSyuhnData1.setKyknen(88);
        kiykSyuhnData1.setHhknnen(88);
        kiykSyuhnData1.setHhknseiymd(BizDate.valueOf("20080808"));
        kiykSyuhnData1.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData1.setHaraimanymd(BizDate.valueOf("20080808"));
        kiykSyuhnData1.setHknkknmanryouymd(BizDate.valueOf("20080808"));
        kiykSyuhnData1.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData1.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData1.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData1.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData1.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData1.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData1.setKihons(BizCurrency.valueOf(1000000000008L));
        kiykSyuhnData1.setHokenryou(BizCurrency.valueOf(1000000000008L));
        kiykSyuhnData1.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData1.setRyouritusdno("008");
        kiykSyuhnData1.setYoteiriritu(BizNumber.valueOf(0.8888));
        kiykSyuhnData1.setYoteirrthendohosyurrt(BizNumber.valueOf(0.8888));
        kiykSyuhnData1.setYtirrthndmnskaisuu(88);
        kiykSyuhnData1.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData1.setNenkinkkn(88);
        kiykSyuhnData1.setNkgnshosyouritu(888);
        kiykSyuhnData1.setNkgnshosyougk(BizCurrency.valueOf(1000000000008L));
        kiykSyuhnData1.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData1.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData1.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData1.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData1.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData1.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData1.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData1.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData1.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData1.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData1.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData1.setPharaikomisougaku(BizCurrency.valueOf(2000000000003L));
        kiykSyuhnData1.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData1.setSyorikbn(C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI);
        kiykSyuhnData1.setKyksjkkktyouseiriritu(BizNumber.valueOf(200));
        kiykSyuhnData1.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData1.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData1.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData1.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData1);

        SV_KiykSyuhnData kiykSyuhnData2 = new SV_KiykSyuhnData();
        kiykSyuhnData2.setSyono("10810000086");
        kiykSyuhnData2.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData2.setSyouhncd("1008");
        kiykSyuhnData2.setSyouhnsdno(0);
        kiykSyuhnData2.setKyksyouhnrenno(0);
        kiykSyuhnData2.setHenkousikibetukey("100000000000000008");
        kiykSyuhnData2.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData2.setKykjyoutai(C_Kykjyoutai.HRKMTYUU);
        kiykSyuhnData2.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnData2.setSyoumetuymd(BizDate.valueOf("20080808"));
        kiykSyuhnData2.setKouryokuhasseiymd(BizDate.valueOf("20090101"));
        kiykSyuhnData2.setKykymd(BizDate.valueOf("20080808"));
        kiykSyuhnData2.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData2.setSknnkaisiymd(BizDate.valueOf("20080808"));
        kiykSyuhnData2.setGansknnkaisiymd(BizDate.valueOf("20080818"));
        kiykSyuhnData2.setHksknnkaisiymd(BizDate.valueOf("20080819"));
        kiykSyuhnData2.setHkgansknnkaisiymd(BizDate.valueOf("20080820"));
        kiykSyuhnData2.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData2.setHknkkn(8);
        kiykSyuhnData2.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData2.setHrkkkn(8);
        kiykSyuhnData2.setKyknen(88);
        kiykSyuhnData2.setHhknnen(88);
        kiykSyuhnData2.setHhknseiymd(BizDate.valueOf("20080808"));
        kiykSyuhnData2.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData2.setHaraimanymd(BizDate.valueOf("20080808"));
        kiykSyuhnData2.setHknkknmanryouymd(BizDate.valueOf("20080808"));
        kiykSyuhnData2.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData2.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData2.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData2.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData2.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData2.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData2.setKihons(BizCurrency.valueOf(1000000000008L));
        kiykSyuhnData2.setHokenryou(BizCurrency.valueOf(1000000000008L));
        kiykSyuhnData2.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData2.setRyouritusdno("008");
        kiykSyuhnData2.setYoteiriritu(BizNumber.valueOf(0.8888));
        kiykSyuhnData2.setYoteirrthendohosyurrt(BizNumber.valueOf(0.8888));
        kiykSyuhnData2.setYtirrthndmnskaisuu(88);
        kiykSyuhnData2.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData2.setNenkinkkn(88);
        kiykSyuhnData2.setNkgnshosyouritu(888);
        kiykSyuhnData2.setNkgnshosyougk(BizCurrency.valueOf(1000000000008L));
        kiykSyuhnData2.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData2.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData2.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData2.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData2.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData2.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData2.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData2.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData2.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData2.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData2.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData2.setPharaikomisougaku(BizCurrency.valueOf(2000000000004L));
        kiykSyuhnData2.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData2.setSyorikbn(C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI);
        kiykSyuhnData2.setKyksjkkktyouseiriritu(BizNumber.valueOf(300));
        kiykSyuhnData2.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData2.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData2.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData2.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData2);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000086", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1008", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000008", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.YUUKOU, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HRKMTYUU, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.MUKOU, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20080808"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20090101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20080808"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20080808"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20080819"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20080820"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20080821"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 8, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 8, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 88, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 88, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20080808"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20080808"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20080808"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000008L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000008L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "008", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.8888), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.8888), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 88, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(200), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 88, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 888, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000008L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_GENGAKU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000003L), "保険料払込総額");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（前）");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getSyono(), "10810000086", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getSyouhncd(), "1008", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHenkousikibetukey(), "100000000000000008", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.YUUKOU, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKykjyoutai(), C_Kykjyoutai.HRKMTYUU, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getSyoumetujiyuu(), C_Syoumetujiyuu.MUKOU, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getSyoumetuymd(), BizDate.valueOf("20080808"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKouryokuhasseiymd(), BizDate.valueOf("20090101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKykymd(), BizDate.valueOf("20080808"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getSknnkaisiymd(), BizDate.valueOf("20080808"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getGansknnkaisiymd(), BizDate.valueOf("20080818"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHksknnkaisiymd(), BizDate.valueOf("20080819"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHkgansknnkaisiymd(), BizDate.valueOf("20080820"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHknkkn(), 8, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHrkkkn(), 8, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKyknen(), 88, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHhknnen(), 88, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHhknseiymd(), BizDate.valueOf("20080808"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHaraimanymd(), BizDate.valueOf("20080808"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHknkknmanryouymd(), BizDate.valueOf("20080808"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKihons(), BizCurrency.valueOf(1000000000008L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getHokenryou(), BizCurrency.valueOf(1000000000008L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getRyouritusdno(), "008", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getYoteiriritu(), BizNumber.valueOf(0.8888), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.8888), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getYtirrthndmnskaisuu(), 88, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKyksjkkktyouseiriritu(), BizNumber.valueOf(300), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getNenkinkkn(), 88, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getNkgnshosyouritu(), 888, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getNkgnshosyougk(), BizCurrency.valueOf(1000000000008L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_GENGAKU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getPharaikomisougaku(), BizCurrency.valueOf(2000000000004L), "保険料払込総額");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae().getSyorikbn(), C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI , "処理区分");
    }

    @Test
    @TestOrder(50)
    public void testExec_A5() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.TOKUTEIIDOUSYOUHININFO;
        String tokutejitenSyono = "10810000101";
        BizDate tokutejitenKijyunYmd = null;
        String tokutejitenKey = "100000000000000010";
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000101");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1010");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000010");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HRKMTYUU);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20101010"));
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20101010"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20101010"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20101011"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20101012"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20101013"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(10);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(10);
        kiykSyuhnData.setKyknen(100);
        kiykSyuhnData.setHhknnen(100);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20101010"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20101010"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20101010"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000010L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000010L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("010");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(1.0000));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(1.0000));
        kiykSyuhnData.setYtirrthndmnskaisuu(10);
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(10);
        kiykSyuhnData.setNkgnshosyouritu(100);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000010L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000005L));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000101", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1010", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000010", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.YUUKOU, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HRKMTYUU, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.MUKOU, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20101010"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20090101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20101010"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20101010"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20101011"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20101012"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20101013"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 10, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 10, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 100, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 100, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20101010"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20101010"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20101010"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000010L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000010L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "010", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(1.0000), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(1.0000), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 10, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 10, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 100, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000010L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_GENGAKU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000005L), "保険料払込総額");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(60)
    public void testExec_A6() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.TOKUTEIIDOUSYOUHININFO;
        String tokutejitenSyono = "10810000111";
        BizDate tokutejitenKijyunYmd = null;
        String tokutejitenKey = "100000000000000010";
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（後）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto() == null, true, "特定時点契約商品（後）レコードBean");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(70)
    public void testExec_A7() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.KAIYAKU);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_SEINENGAPPISEI);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.YUUKOU, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.KAIYAKU, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_SEINENGAPPISEI, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(80)
    public void testExec_A8() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.PMNYSYMET_JDSKN_SSNZM);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.SYOUMETU, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.PMNYSYMET_JDSKN_SSNZM, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_GENGAKU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(90)
    public void testExec_A9() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.PMNYSYMET_MSSN);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.SYOUMETU, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.PMNYSYMET_MSSN, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_GENGAKU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(100)
    public void testExec_A10() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_KHMKHGKTTTYENDTHNK);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.YUUKOU, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.MUKOU, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_KHMKHGKTTTYENDTHNK, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI , "処理区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(110)
    public void testExec_A11() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_KANIKEIYAKUNAIYOUTEISEI);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.TMTTKNHANEI_ITEN_TORIKESI);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.YUUKOU, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.MUKOU, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_KANIKEIYAKUNAIYOUTEISEI, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.TMTTKNHANEI_ITEN_TORIKESI , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(120)
    public void testExec_A12() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_KHSISUURENDOTMTTKNHANEI);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.TMTTKNHANEI_ITEN);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.YUUKOU, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.MUKOU, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_KHSISUURENDOTMTTKNHANEI, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.TMTTKNHANEI_ITEN , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(130)
    public void testExec_A13() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.SYOUMETU);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_GENGAKU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.MKHGKTTTYENDTHNKTORIKESI);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（後）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto() == null, true, "特定時点契約商品（後）レコードBean");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }
    @Test
    @TestOrder(140)
    public void testExec_A14() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_KANIKEIYAKUNAIYOUTEISEI);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.TMTTKNHANEI_ITEN);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（後）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto() == null, true, "特定時点契約商品（後）レコードBean");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }
    @Test
    @TestOrder(150)
    public void testExec_A15() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.YUUKOU);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.MUKOU);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_KHSISUURENDOTMTTKNHANEI);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));

        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.TMTTKNHANEI_ITEN_TORIKESI);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（後）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto() == null, true, "特定時点契約商品（後）レコードBean");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(160)
    public void testExec_A16() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.BLNK);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.BLNK);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（後）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto() == null, true, "特定時点契約商品（後）レコードBean");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(170)
    public void testExec_A17() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.BLNK);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.KAISUUHENKOU_CRECAHENNYUU);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.BLNK, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.BLNK, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.KAISUUHENKOU_CRECAHENNYUU , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(180)
    public void testExec_A18() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.BLNK);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.KAISUUHENKOU_YOHURIHENNYUU);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.BLNK, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.BLNK, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.KAISUUHENKOU_YOHURIHENNYUU , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(190)
    public void testExec_A19() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.BLNK);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.CRECAHENNYUU);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.BLNK, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.BLNK, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.CRECAHENNYUU , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(200)
    public void testExec_A20() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.BLNK);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.YOHURIHENNYUU);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.BLNK, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.BLNK, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.YOHURIHENNYUU , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(210)
    public void testExec_A21() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.BLNK);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_KHKZKTRKKYKDRTKYKHNK);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.KAISUUHENKOU_CRECAHENNYUU);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（後）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto() == null, true, "特定時点契約商品（後）レコードBean");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(220)
    public void testExec_A22() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.BLNK);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.TIKIKTSYURUIHENKOU_CRECAHENNYUU);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.BLNK, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.BLNK, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.TIKIKTSYURUIHENKOU_CRECAHENNYUU , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(230)
    public void testExec_A23() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.BLNK);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.TIKIKTSYURUIHENKOU_YOHURIHENNYUU);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.BLNK, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.BLNK, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.TIKIKTSYURUIHENKOU_YOHURIHENNYUU , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(240)
    public void testExec_A24() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.BLNK);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.KAISUUHENKOU);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.BLNK, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.BLNK, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.KAISUUHENKOU , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }

    @Test
    @TestOrder(250)
    public void testExec_A25() {

        C_TokutejitenSyoriKbn tokutejitenSyoriKbn = C_TokutejitenSyoriKbn.KIJYUNBIJITENSYOUHININFO;
        String tokutejitenSyono = "10810000064";
        BizDate tokutejitenKijyunYmd = BizDate.valueOf("20100101");
        String tokutejitenKey = null;
        List<SV_KiykSyuhnData> kiykSyuhnDataLst = new ArrayList<>();

        SV_KiykSyuhnData kiykSyuhnData = new SV_KiykSyuhnData();
        kiykSyuhnData.setSyono("10810000064");
        kiykSyuhnData.setSyutkkbn(C_SyutkKbn.SYU);
        kiykSyuhnData.setSyouhncd("1006");
        kiykSyuhnData.setSyouhnsdno(0);
        kiykSyuhnData.setKyksyouhnrenno(0);
        kiykSyuhnData.setHenkousikibetukey("100000000000000006");
        kiykSyuhnData.setYuukousyoumetukbn(C_YuukousyoumetuKbn.BLNK);
        kiykSyuhnData.setKykjyoutai(C_Kykjyoutai.HARAIMAN);
        kiykSyuhnData.setSyoumetujiyuu(C_Syoumetujiyuu.BLNK);
        kiykSyuhnData.setSyoumetuymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKykymdsiteiumukbn(C_UmuKbn.NONE);
        kiykSyuhnData.setSknnkaisiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setGansknnkaisiymd(BizDate.valueOf("20040506"));
        kiykSyuhnData.setHksknnkaisiymd(BizDate.valueOf("20040507"));
        kiykSyuhnData.setHkgansknnkaisiymd(BizDate.valueOf("20040508"));
        kiykSyuhnData.setHknkknsmnkbn(C_HknkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHknkkn(05);
        kiykSyuhnData.setHrkkknsmnkbn(C_HrkkknsmnKbn.SAIMANKI);
        kiykSyuhnData.setHrkkkn(05);
        kiykSyuhnData.setKyknen(055);
        kiykSyuhnData.setHhknnen(055);
        kiykSyuhnData.setHhknseiymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHhknsei(C_Hhknsei.MALE);
        kiykSyuhnData.setHaraimanymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setHknkknmanryouymd(BizDate.valueOf("20040505"));
        kiykSyuhnData.setKatakbn(C_KataKbn.GKYUFGK_5);
        kiykSyuhnData.setKyhgndkatakbn(C_KyhgndkataKbn.TYPE60);
        kiykSyuhnData.setSyukyhkinkatakbn(C_SyukyhkinkataKbn.SYU1);
        kiykSyuhnData.setKhnkyhkgbairitukbn(C_KhnkyhkgbairituKbn.ITIBAI);
        kiykSyuhnData.setRokudaildkbn(C_6daiLdKbn.ARI);
        kiykSyuhnData.setPmnjtkkbn(C_PmnjtkKbn.SANDAISIPPMNJTOK);
        kiykSyuhnData.setKihons(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setHokenryou(BizCurrency.valueOf(1000000000006L));
        kiykSyuhnData.setKyktuukasyu(C_Tuukasyu.JPY);
        kiykSyuhnData.setRyouritusdno("005");
        kiykSyuhnData.setYoteiriritu(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYoteirrthendohosyurrt(BizNumber.valueOf(0.4444));
        kiykSyuhnData.setYtirrthndmnskaisuu(44);
        kiykSyuhnData.setKyksjkkktyouseiriritu(BizNumber.valueOf(100));
        kiykSyuhnData.setNksyukbn(C_Nenkinsyu.KAKUTEINENKIN);
        kiykSyuhnData.setNenkinkkn(44);
        kiykSyuhnData.setNkgnshosyouritu(444);
        kiykSyuhnData.setNkgnshosyougk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setGyoumuKousinKinou(IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU);
        kiykSyuhnData.setGengakugoyenitijibrpstgk(BizCurrency.valueOf(1000000000005L));
        kiykSyuhnData.setYendthnkymd(BizDate.valueOf("20180102"));
        kiykSyuhnData.setSetteibairitu(BizNumber.valueOf(0.66));
        kiykSyuhnData.setKykjisisuurendourate(BizNumber.valueOf(100));
        kiykSyuhnData.setTmttknzoukaritujygn(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setTmttknhaibunjyoutai(C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY);
        kiykSyuhnData.setSisuukbn(C_Sisuukbn.BLCON1);
        kiykSyuhnData.setGsbunrikzkakuninumu(C_UmuKbn.NONE);
        kiykSyuhnData.setGsbunritaisyou(C_UmuKbn.NONE);
        kiykSyuhnData.setPharaikomisougaku(BizCurrency.valueOf(2000000000006L));
        kiykSyuhnData.setTmttknitenymd(BizDate.valueOf("20180101"));
        kiykSyuhnData.setSyoriYmd(BizDate.valueOf("20090101"));
        kiykSyuhnData.setLoadinghnkgtumitateriritu(BizNumber.valueOf(0.6666));
        kiykSyuhnData.setRendouritu(BizNumber.valueOf(0.4567));
        kiykSyuhnData.setTeikishrritu(BizNumber.valueOf(0.5678));
        kiykSyuhnData.setDai1hknkkn(10);
        kiykSyuhnData.setSyorikbn(C_SyoriKbn.KAISUUHENKOU_KOUZAHENKOU);
        kiykSyuhnData.setKouryokuhasseiymd(BizDate.valueOf("20080101"));
        kiykSyuhnDataLst.add(kiykSyuhnData);

        TkJitenKeiyakuSyouhinBean tkJitenKeiyakuSyouhinBean = srGetTokutejitenSyohnInfo.exec(tokutejitenSyoriKbn,
            tokutejitenSyono, tokutejitenKijyunYmd, tokutejitenKey, kiykSyuhnDataLst);

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnAto(), C_SyouhinJyouhouGetKbn.SYOUHININFOARI, "商品情報取得区分（後）");

        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyono(), "10810000064", "証券番号");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyutkKbn(), C_SyutkKbn.SYU, "主契約特約区分");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhncd(), "1006", "商品コード");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyouhnsdno(), 0, "商品世代番号");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksyouhnrenno(), 0, "契約商品連番");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHenkousikibetukey(), "100000000000000006", "変更識別キー");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYuukousyoumetuKbn(), C_YuukousyoumetuKbn.BLNK, "有効消滅区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjyoutai(), C_Kykjyoutai.HARAIMAN, "契約状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetujiyuu(), C_Syoumetujiyuu.BLNK, "消滅事由");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoumetuymd(), BizDate.valueOf("20040505"), "消滅日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKouryokuhasseiymd(), BizDate.valueOf("20080101"), "効力発生日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymd(), BizDate.valueOf("20040505"), "契約日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykymdsiteiumuKbn(), C_UmuKbn.NONE, "契約日指定有無区分");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSknnkaisiymd(), BizDate.valueOf("20040505"), "責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGansknnkaisiymd(), BizDate.valueOf("20040506"), "がん責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHksknnkaisiymd(), BizDate.valueOf("20040507"), "復活責任開始日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHkgansknnkaisiymd(), BizDate.valueOf("20040508"), "復活がん責任開始日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknsmnKbn(), C_HknkknsmnKbn.SAIMANKI, "保険期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkkn(), 05, "保険期間");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkknsmnKbn(), C_HrkkknsmnKbn.SAIMANKI, "払込期間歳満期区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHrkkkn(), 05, "払込期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyknen(), 055, "契約者年齢");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknnen(), 055, "被保険者年齢");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknseiymd(), BizDate.valueOf("20040505"), "被保険者生年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHhknsei(), C_Hhknsei.MALE, "被保険者性別");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHaraimanymd(), BizDate.valueOf("20040505"), "払満日");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHknkknmanryouymd(), BizDate.valueOf("20040505"), "保険期間満了日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKataKbn(), C_KataKbn.GKYUFGK_5, "型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyhgndkataKbn(), C_KyhgndkataKbn.TYPE60, "給付限度型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyukyhkinkataKbn(), C_SyukyhkinkataKbn.SYU1, "手術給付金型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKhnkyhkgbairituKbn(), C_KhnkyhkgbairituKbn.ITIBAI, "基本給付金額倍率区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRokudaildkbn(), C_6daiLdKbn.ARI, "６大生活習慣病追加給付型区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPmnjtkKbn(), C_PmnjtkKbn.SANDAISIPPMNJTOK, "保険料免除特約区分");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKihons(), BizCurrency.valueOf(1000000000006L), "基本Ｓ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getHokenryou(), BizCurrency.valueOf(1000000000006L), "保険料");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyktuukasyu(), C_Tuukasyu.JPY, "契約通貨種類");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRyouritusdno(), "005", "料率世代番号");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteiriritu(), BizNumber.valueOf(0.4444), "予定利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYoteirrthendohosyurrt(), BizNumber.valueOf(0.4444), "予定利率変動時保証利率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYtirrthndmnskaisuu(), 44, "予定利率変動見直回数");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKyksjkkktyouseiriritu(), BizNumber.valueOf(100), "契約時市場価格調整用利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNksyukbn(), C_Nenkinsyu.KAKUTEINENKIN, "年金種類区分");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNenkinkkn(), 44, "年金期間");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyouritu(), 444, "年金原資最低保証率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getNkgnshosyougk(), BizCurrency.valueOf(1000000000005L), "年金原資最低保証額");
        exStringEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGyoumuKousinKinou(), IKhozenCommonConstants.KINOUID_HARAIKATAHENKOU, "業務用更新機能ＩＤ");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGengakugoyenitijibrpstgk(), BizCurrency.valueOf(1000000000005L), "減額後円換算一時払保険料相当額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getYendthnkymd(), BizDate.valueOf("20180102"), "円建変更日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSetteibairitu(), BizNumber.valueOf(0.66), "設定倍率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getKykjisisuurendourate(), BizNumber.valueOf(100), "契約時指数連動部分割合");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknzoukaritujygn(), BizNumber.valueOf(0.6666), "積立金増加率上限");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTumitateriritu(), BizNumber.valueOf(0.6666), "積立利率");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknhaibunjyoutai(), C_TmttknhaibunjyoutaiKbn.TEIRITU_ONLY, "積立金配分状態");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSisuukbn(), C_Sisuukbn.BLCON1, "指数区分");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunrikzkakuninumu(), C_UmuKbn.NONE , "源泉分離課税確認有無");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getGsbunritaisyou(), C_UmuKbn.NONE , "源泉分離課税対象");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getPharaikomisougaku(), BizCurrency.valueOf(2000000000006L), "保険料払込総額");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTmttknitenYmd(), BizDate.valueOf("20180101"), "積立金移転日");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getLoadinghnkgtumitateriritu(), BizNumber.valueOf(0.6666), "ローディング変更後積立利率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getRendouritu(), BizNumber.valueOf(0.4567), "連動率");
        exBizCalcbleEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getTeikishrritu(), BizNumber.valueOf(0.5678), "定期支払率");
        exNumericEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getDai1hknkkn(), 10, "第１保険期間");
        exDateEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyoriYmd(), BizDate.valueOf("20090101"), "処理年月日");
        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanAto().getSyorikbn(), C_SyoriKbn.KAISUUHENKOU_KOUZAHENKOU , "処理区分");

        exClassificationEquals(tkJitenKeiyakuSyouhinBean.getSyouhinJyouhouGetKbnMae(), C_SyouhinJyouhouGetKbn.SYOUHININFONASI, "商品情報取得区分（前）");
        exBooleanEquals(tkJitenKeiyakuSyouhinBean.getTkJitenKeiyakuSyouhinKijyunBeanMae() == null, true, "特定時点契約商品（前）レコードBean");
    }
}
